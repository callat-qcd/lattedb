"""
Django settings for lattedb project.

Generated by 'django-admin startproject' using Django 2.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

import yaml

from espressodb.management.utilities.files import get_project_settings
from espressodb.management.utilities.files import get_db_config
from espressodb.management.utilities.files import ESPRESSO_DB_ROOT


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
ROOT_DIR = os.path.dirname(BASE_DIR)

_SETTINGS_DIR = os.environ.get("LATTEDB_ROOT_DIR", ROOT_DIR)

_SETTINGS = get_project_settings(_SETTINGS_DIR)
SECRET_KEY = _SETTINGS.get("SECRET_KEY")
PROJECT_APPS = _SETTINGS.get("PROJECT_APPS", [])
ALLOWED_HOSTS = _SETTINGS.get("ALLOWED_HOSTS", [])
DEBUG = _SETTINGS.get("DEBUG", False)

INSTALLED_APPS = (
    PROJECT_APPS
    + [
        "espressodb.base",
        "espressodb.documentation",
        "espressodb.management",
        "espressodb.notifications",
    ]
    + [
        "bootstrap4",
        "widget_tweaks",
        "django_extensions",
        "rest_framework",
        "rest_framework_datatables",
    ]
    + [
        "django.contrib.admin",
        "django.contrib.auth",
        "django.contrib.contenttypes",
        "django.contrib.sessions",
        "django.contrib.messages",
        "django.contrib.staticfiles",
    ]
)

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "lattedb.config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            os.path.join(ROOT_DIR, "lattedb", "templates"),
            os.path.join(ESPRESSO_DB_ROOT, "espressodb", "base", "templates"),
            os.path.join(ESPRESSO_DB_ROOT, "espressodb", "documentation", "templates"),
            os.path.join(ESPRESSO_DB_ROOT, "espressodb", "notifications", "templates"),
        ],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ]
        },
    }
]

for app in PROJECT_APPS[::-1]:
    _template_dir = os.path.join(ROOT_DIR, app.replace(".", os.sep), "templates")
    if os.path.exists(_template_dir):
        TEMPLATES[0]["DIRS"].insert(0, _template_dir)

WSGI_APPLICATION = "lattedb.config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases
DB_CONFIG = get_db_config(_SETTINGS_DIR)
DATABASES = {"default": DB_CONFIG}

def load_local_db():
    """Loading local db config.
    """
    local_db_file = os.path.join(ROOT_DIR, "db-config-local.yaml")
    db_config = None
    if os.path.exists(local_db_file):
        with open(local_db_file, "r") as fin:
            db_config = yaml.safe_load(fin.read())

        if "ENGINE" not in db_config or "NAME" not in db_config:
            raise KeyError(f"Local db file {LOCAL_DB} not configured correctly.")

    return db_config

LOCAL_DB = load_local_db()

if LOCAL_DB is not None:
    DATABASES["local"] = LOCAL_DB




# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = "/static/"

STATICFILES_DIRS = [
    os.path.join(ROOT_DIR, "lattedb", "static"),
    os.path.join(ESPRESSO_DB_ROOT, "espressodb", "base", "static"),
]
for app in PROJECT_APPS[::-1]:
    _static_dir = os.path.join(ROOT_DIR, app.replace(".", os.sep), "static")
    if os.path.exists(_static_dir):
        STATICFILES_DIRS.insert(0, _static_dir)

STATIC_ROOT = os.path.join(_SETTINGS_DIR, "static")
MEDIA_ROOT = os.path.join(_SETTINGS_DIR, "media")


LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "console": {
            "level": "DEBUG" if DEBUG else "INFO",
            "class": "logging.StreamHandler",
        }
    },
    "loggers": {
        "espressodb": {"handlers": ["console"], "level": "INFO", "propagate": True}
    },
}

LOGIN_REDIRECT_URL = "base:index"
LOGOUT_REDIRECT_URL = "base:index"

GRAPH_MODELS = {
    "all_applications": True,
    "pygraphviz": True,
    "layout": "fdp",
    "group_models": True,
    "hide_edge_labels": True,
    "exclude_models": [
        "Group",
        "AbstractUser",
        "LogEntry",
        "Permission",
        "ContentType",
        "Session",
        "AbstractBaseSession",
        "User",
        "Base",
        "Status",
        "*_*",
    ],
    "output": "models.pdf",
    "exclude_columns": ["user", "id", "description", "last_modified", "misc", "type"],
}

PROJECT_NAME = "lattedb"

MIGRATION_MODULES = {"notifications": "lattedb.config.migrations.notifications"}

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    "DEFAULT_RENDERER_CLASSES": (
        "rest_framework.renderers.JSONRenderer",
        "rest_framework.renderers.BrowsableAPIRenderer",
        "rest_framework_datatables.renderers.DatatablesRenderer",
    ),
    "DEFAULT_FILTER_BACKENDS": (
        "rest_framework_datatables.filters.DatatablesFilterBackend",
    ),
    "DEFAULT_PAGINATION_CLASS": "lattedb.project.formfac.rest.pagination.Paginator",
    "PAGE_SIZE": 50,
}


if not DEBUG:
    CSRF_COOKIE_SECURE = True
    SESSION_COOKIE_SECURE = True
    SECURE_CONTENT_TYPE_NOSNIFF = True
    SECURE_BROWSER_XSS_FILTER = True
    SECURE_SSL_REDIRECT = True
    X_FRAME_OPTIONS = "DENY"
    SECURE_HSTS_SECONDS = 3600
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True
