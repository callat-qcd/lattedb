# Generated by Django 2.2.5 on 2019-10-31 21:16

from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('correlator', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Fhcompare',
            fields=[
                ('id', models.AutoField(help_text='Primary key for Base class.', primary_key=True, serialize=False)),
                ('type', models.TextField(editable=False, help_text='Type for the base class. Will be auto set to specialized type on save')),
                ('last_modified', models.DateTimeField(auto_now=True, help_text='Date the class was last modified')),
                ('tag', models.CharField(blank=True, help_text='User defined tag for easy searches', max_length=20, null=True)),
                ('mn', models.FloatField(help_text='Float: nucleon mass')),
                ('ga', models.FloatField(help_text='Float: axial charge')),
                ('gv', models.FloatField(help_text='Float: vector charge')),
                ('rating', models.SmallIntegerField(default=1, help_text='Int: Limit from 1 to 5, default = 1. Rate your own fits.', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('result', models.TextField(help_text="Text: {'your_results': 'all dumped here'}")),
                ('user', models.ForeignKey(blank=True, help_text='User who updated this object. Set on save by connection to database. Ananymous if not found.', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SourceAvgSeq3pt',
            fields=[
                ('id', models.AutoField(help_text='Primary key for Base class.', primary_key=True, serialize=False)),
                ('type', models.TextField(editable=False, help_text='Type for the base class. Will be auto set to specialized type on save')),
                ('last_modified', models.DateTimeField(auto_now=True, help_text='Date the class was last modified')),
                ('tag', models.CharField(blank=True, help_text='User defined tag for easy searches', max_length=20, null=True)),
                ('real', models.FloatField(help_text='Float: Real part of data')),
                ('imag', models.FloatField(help_text='Float: Imaginary part of data')),
                ('tins', models.PositiveSmallIntegerField(help_text='Source-insertion time separation. Source-sink time (sinksep)âˆ‚ is in seq3pt metadata.')),
                ('baryonseq3pts', models.ManyToManyField(to='correlator.BaryonSeq3pt')),
                ('user', models.ForeignKey(blank=True, help_text='User who updated this object. Set on save by connection to database. Ananymous if not found.', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SourceAvgFH3pt',
            fields=[
                ('id', models.AutoField(help_text='Primary key for Base class.', primary_key=True, serialize=False)),
                ('type', models.TextField(editable=False, help_text='Type for the base class. Will be auto set to specialized type on save')),
                ('last_modified', models.DateTimeField(auto_now=True, help_text='Date the class was last modified')),
                ('tag', models.CharField(blank=True, help_text='User defined tag for easy searches', max_length=20, null=True)),
                ('real', models.FloatField(help_text='Float: Real part of data')),
                ('imag', models.FloatField(help_text='Float: Imaginary part of data')),
                ('tsep', models.PositiveSmallIntegerField(help_text='Source-sink time separation')),
                ('baryonfh3pts', models.ManyToManyField(to='correlator.BaryonFH3pt')),
                ('user', models.ForeignKey(blank=True, help_text='User who updated this object. Set on save by connection to database. Ananymous if not found.', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SourceAvg2pt',
            fields=[
                ('id', models.AutoField(help_text='Primary key for Base class.', primary_key=True, serialize=False)),
                ('type', models.TextField(editable=False, help_text='Type for the base class. Will be auto set to specialized type on save')),
                ('last_modified', models.DateTimeField(auto_now=True, help_text='Date the class was last modified')),
                ('tag', models.CharField(blank=True, help_text='User defined tag for easy searches', max_length=20, null=True)),
                ('real', models.FloatField(help_text='Float: Real part of data')),
                ('imag', models.FloatField(help_text='Float: Imaginary part of data')),
                ('tsep', models.PositiveSmallIntegerField(help_text='Source-sink time separation')),
                ('baryon2pts', models.ManyToManyField(to='correlator.Baryon2pt')),
                ('user', models.ForeignKey(blank=True, help_text='User who updated this object. Set on save by connection to database. Ananymous if not found.', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Jason0',
            fields=[
                ('fhcompare_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='project_fhcompare.Fhcompare')),
                ('listofcorrs', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), default=list, help_text='Text: A list of correlators used', size=None)),
                ('trange', django.contrib.postgres.fields.jsonb.JSONField(default=dict, help_text='Dictionary of time ranges, this goes into creating the hash')),
                ('states', django.contrib.postgres.fields.jsonb.JSONField(default=dict, help_text='Dictionary of nstates, enters in hash')),
                ('inputs', django.contrib.postgres.fields.jsonb.JSONField(default=dict, help_text='Other inputs (priors, etc...), enters in hash')),
                ('hash_fit', models.TextField(default='', help_text='Unique hash field to prevent writing in same result')),
                ('corr2pt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='correlator.Correlator')),
                ('corrseq', models.ManyToManyField(to='correlator.Correlator')),
            ],
            bases=('project_fhcompare.fhcompare',),
        ),
        migrations.AddConstraint(
            model_name='jason0',
            constraint=models.UniqueConstraint(fields=('hash_fit',), name='unique_project_fhcompare_jason0'),
        ),
    ]
