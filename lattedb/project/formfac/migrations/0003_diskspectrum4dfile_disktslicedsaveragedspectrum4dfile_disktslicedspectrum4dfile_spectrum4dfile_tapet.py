# Generated by Django 2.2.7 on 2020-02-13 20:51

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('project_formfac', '0002_auto_20191122_2319'),
    ]

    operations = [
        migrations.CreateModel(
            name='TSlicedSAveragedSpectrum4DFile',
            fields=[
                ('id', models.AutoField(help_text='Primary key for Base class.', primary_key=True, serialize=False)),
                ('last_modified', models.DateTimeField(auto_now=True, help_text='Date the class was last modified')),
                ('tag', models.CharField(blank=True, help_text='User defined tag for easy searches', max_length=200, null=True)),
                ('name', models.TextField(help_text='Name of the file. Should not include folders.', unique=True)),
                ('ensemble', models.CharField(help_text='Name of the ensemble. E.g., `a15m135XL`.', max_length=100)),
                ('stream', models.CharField(help_text='Name of the HMC stream, e.g., `a`.', max_length=10)),
                ('source_set', models.CharField(help_text='Set of sources in this file. E.g., `16-23`.', max_length=100)),
                ('configuration', models.IntegerField(help_text='Number of configuration.')),
                ('user', models.ForeignKey(blank=True, help_text='User who updated this object. Set on save by connection to database. Ananymous if not found.', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('ensemble', 'stream', 'source_set', 'configuration')},
            },
        ),
        migrations.CreateModel(
            name='TSlicedSpectrum4DFile',
            fields=[
                ('id', models.AutoField(help_text='Primary key for Base class.', primary_key=True, serialize=False)),
                ('last_modified', models.DateTimeField(auto_now=True, help_text='Date the class was last modified')),
                ('tag', models.CharField(blank=True, help_text='User defined tag for easy searches', max_length=200, null=True)),
                ('name', models.TextField(help_text='Name of the file. Should not include folders.', unique=True)),
                ('ensemble', models.CharField(help_text='Name of the ensemble. E.g., `a15m135XL`.', max_length=100)),
                ('stream', models.CharField(help_text='Name of the HMC stream, e.g., `a`.', max_length=10)),
                ('source_set', models.CharField(help_text='Set of sources in this file. E.g., `16-23`.', max_length=100)),
                ('configuration', models.IntegerField(help_text='Number of configuration.')),
                ('source', models.CharField(help_text='Source location in format `xXyYzZtT`.', max_length=100)),
                ('dependent', models.ForeignKey(help_text='Link to t-sliced source averaged spectrum file.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dependencies', to='project_formfac.TSlicedSAveragedSpectrum4DFile')),
                ('user', models.ForeignKey(blank=True, help_text='User who updated this object. Set on save by connection to database. Ananymous if not found.', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('ensemble', 'stream', 'source_set', 'configuration', 'source')},
            },
        ),
        migrations.CreateModel(
            name='TapeTSlicedSAveragedSpectrum4DFile',
            fields=[
                ('id', models.AutoField(help_text='Primary key for Base class.', primary_key=True, serialize=False)),
                ('last_modified', models.DateTimeField(auto_now=True, help_text='Date the class was last modified')),
                ('tag', models.CharField(blank=True, help_text='User defined tag for easy searches', max_length=200, null=True)),
                ('path', models.TextField(help_text='The directory path.')),
                ('exists', models.BooleanField(help_text='Can the file be found `physical_file.path/physical_file.file.name`?.')),
                ('machine', models.CharField(help_text='The machine the file can be found on.', max_length=100)),
                ('size', models.BigIntegerField(help_text='Size of the file in Bytes.', null=True)),
                ('date_modified', models.DateTimeField(help_text='The last time the file was modified.', null=True)),
                ('file', models.OneToOneField(help_text='The file meta information.', on_delete=django.db.models.deletion.CASCADE, related_name='tape', to='project_formfac.TSlicedSAveragedSpectrum4DFile')),
                ('user', models.ForeignKey(blank=True, help_text='User who updated this object. Set on save by connection to database. Ananymous if not found.', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Spectrum4DFile',
            fields=[
                ('id', models.AutoField(help_text='Primary key for Base class.', primary_key=True, serialize=False)),
                ('last_modified', models.DateTimeField(auto_now=True, help_text='Date the class was last modified')),
                ('tag', models.CharField(blank=True, help_text='User defined tag for easy searches', max_length=200, null=True)),
                ('name', models.TextField(help_text='Name of the file. Should not include folders.', unique=True)),
                ('ensemble', models.CharField(help_text='Name of the ensemble. E.g., `a15m135XL`.', max_length=100)),
                ('stream', models.CharField(help_text='Name of the HMC stream, e.g., `a`.', max_length=10)),
                ('source_set', models.CharField(help_text='Set of sources in this file. E.g., `16-23`.', max_length=100)),
                ('configuration', models.IntegerField(help_text='Number of configuration.')),
                ('source', models.CharField(help_text='Source location in format `xXyYzZtT`.', max_length=100)),
                ('dependent', models.OneToOneField(help_text='Link to t-sliced spectrum file.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dependency', to='project_formfac.TSlicedSpectrum4DFile')),
                ('user', models.ForeignKey(blank=True, help_text='User who updated this object. Set on save by connection to database. Ananymous if not found.', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('ensemble', 'stream', 'source_set', 'configuration', 'source')},
            },
        ),
        migrations.CreateModel(
            name='DiskTSlicedSpectrum4DFile',
            fields=[
                ('id', models.AutoField(help_text='Primary key for Base class.', primary_key=True, serialize=False)),
                ('last_modified', models.DateTimeField(auto_now=True, help_text='Date the class was last modified')),
                ('tag', models.CharField(blank=True, help_text='User defined tag for easy searches', max_length=200, null=True)),
                ('path', models.TextField(help_text='The directory path.')),
                ('exists', models.BooleanField(help_text='Can the file be found `physical_file.path/physical_file.file.name`?.')),
                ('machine', models.CharField(help_text='The machine the file can be found on.', max_length=100)),
                ('size', models.BigIntegerField(help_text='Size of the file in Bytes.', null=True)),
                ('date_modified', models.DateTimeField(help_text='The last time the file was modified.', null=True)),
                ('file', models.OneToOneField(help_text='The file meta information.', on_delete=django.db.models.deletion.CASCADE, related_name='disk', to='project_formfac.TSlicedSpectrum4DFile')),
                ('user', models.ForeignKey(blank=True, help_text='User who updated this object. Set on save by connection to database. Ananymous if not found.', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DiskTSlicedSAveragedSpectrum4DFile',
            fields=[
                ('id', models.AutoField(help_text='Primary key for Base class.', primary_key=True, serialize=False)),
                ('last_modified', models.DateTimeField(auto_now=True, help_text='Date the class was last modified')),
                ('tag', models.CharField(blank=True, help_text='User defined tag for easy searches', max_length=200, null=True)),
                ('path', models.TextField(help_text='The directory path.')),
                ('exists', models.BooleanField(help_text='Can the file be found `physical_file.path/physical_file.file.name`?.')),
                ('machine', models.CharField(help_text='The machine the file can be found on.', max_length=100)),
                ('size', models.BigIntegerField(help_text='Size of the file in Bytes.', null=True)),
                ('date_modified', models.DateTimeField(help_text='The last time the file was modified.', null=True)),
                ('file', models.OneToOneField(help_text='The file meta information.', on_delete=django.db.models.deletion.CASCADE, related_name='disk', to='project_formfac.TSlicedSAveragedSpectrum4DFile')),
                ('user', models.ForeignKey(blank=True, help_text='User who updated this object. Set on save by connection to database. Ananymous if not found.', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DiskSpectrum4DFile',
            fields=[
                ('id', models.AutoField(help_text='Primary key for Base class.', primary_key=True, serialize=False)),
                ('last_modified', models.DateTimeField(auto_now=True, help_text='Date the class was last modified')),
                ('tag', models.CharField(blank=True, help_text='User defined tag for easy searches', max_length=200, null=True)),
                ('path', models.TextField(help_text='The directory path.')),
                ('exists', models.BooleanField(help_text='Can the file be found `physical_file.path/physical_file.file.name`?.')),
                ('machine', models.CharField(help_text='The machine the file can be found on.', max_length=100)),
                ('size', models.BigIntegerField(help_text='Size of the file in Bytes.', null=True)),
                ('date_modified', models.DateTimeField(help_text='The last time the file was modified.', null=True)),
                ('file', models.OneToOneField(help_text='The file meta information.', on_delete=django.db.models.deletion.CASCADE, related_name='disk', to='project_formfac.Spectrum4DFile')),
                ('user', models.ForeignKey(blank=True, help_text='User who updated this object. Set on save by connection to database. Ananymous if not found.', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
